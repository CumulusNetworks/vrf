#!/bin/bash
# postinst script for vrf
#
# see: dh_installdeb(1)

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

set -e

DIVERT_DIR=/usr/share/vrf

# We set PS1 in our profile.d script; remove the overrides by the
# bash package
for f in /etc/skel/.bashrc /etc/bash.bashrc
do
	d=$(dirname $f)
	mkdir -p ${DIVERT_DIR}/${d}

	dpkg-divert --divert ${DIVERT_DIR}/${f} --rename ${f}
	sed -e 's/^PS1=/#PS1=/' ${DIVERT_DIR}/${f} > ${f}
	cat >> ${f} <<EOF
VRF=\$(vrf identify prompt)
export VRF
PS1='\${debian_chroot:+(\$debian_chroot)}\u@\h\${VRF}:\w\\\$ '
EOF
done

if [ "$1" = configure ]; then
	# If we have setcap is installed, try setting cap_dac_override+ep,
	# which is needed to change VRF of a process
	if command -v setcap > /dev/null; then
		if setcap cap_dac_override+ep /usr/lib/cumulus/runvrf; then
			echo "Successfully setcap cap_dac_override+ep on run vrf."
		else
			echo "setcap failed on runvrf"
			exit 1;
		fi
	else
		echo "setcap is not installed"
		exit 1
	fi
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
